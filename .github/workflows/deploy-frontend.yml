name: Deploy Frontend to Vercel
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches: [ main, dev ]
    paths: [ 'frontend/**' ]
  pull_request:
    paths: [ 'frontend/**' ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Run Tests
        run: npm test
        working-directory: ./frontend

  build:
    name: Build
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}
    needs: test
    runs-on: ubuntu-22.04
    env:
      DEV_MODE_SKIP_AUTH: ${{ vars.DEV_MODE_SKIP_AUTH }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ vars.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ vars.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
      NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Build app
        run: npm run build
        working-directory: ./frontend

  deploy:
    name: Deploy
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    needs: build
    runs-on: ubuntu-22.04
    environment: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Development' }}
    env:
      VERCEL_ENV: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest;

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.VERCEL_ENV }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Build Project Artifacts
        run: vercel build --target=${{ env.VERCEL_ENV }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --target=${{ env.VERCEL_ENV }} --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

  deploy-preview:
    name: Deploy Preview
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-22.04
    env:
      VERCEL_ENV: preview
    environment:
      name: Preview
      url:  ${{ steps.deploy.outputs.preview_url }}

    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Pull Vercel Preview env
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Build
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./frontend

      - name: Deploy
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview_url=$url" >> $GITHUB_OUTPUT
        working-directory: ./frontend

      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Vercel Preview deployed: ${{ steps.deploy.outputs.preview_url }}"
            })
