name: Check database migrations

on:
  pull_request:
    branches: ["**"]          # run on every PR

jobs:
  # ------------------------------------------------------------
  # 1) PRE-CHECKS – run fast and fail fast
  # ------------------------------------------------------------
  pre-checks:
    runs-on: ubuntu-22.04
    outputs:
      backend_changed: ${{ steps.filter.outputs.any_changed }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0      # needed for merge-base checks

      - name: Detect backend-related changes
        id: filter
        uses: tj-actions/changed-files@v46
        with:
          files: |
            backend/app/models/**
            backend/alembic/versions/**
            backend/alembic/data/**
            backend/app/data/**

      - name: Ensure latest dev is merged
        if: steps.filter.outputs.any_changed == 'true'
        run: |
          git fetch origin dev
          if ! git merge-base --is-ancestor origin/dev HEAD; then
            echo "::error::Please merge the latest 'dev' branch into this PR."
            exit 1
          fi
          echo "✅ dev branch is merged."

      - name: Guard against edits to existing migrations
        if: steps.filter.outputs.any_changed == 'true'
        run: |
          set -eo pipefail
          mapfile -t dev_migrations < <(
            git ls-tree -r --name-only origin/dev \
              -- backend/alembic/versions/ backend/alembic/data/ | grep -E '\.(py|sql)$'
          )
          for f in "${dev_migrations[@]}"; do
            git diff --quiet origin/dev -- "$f" && continue
            echo "::error file=$f::Existing migration modified or deleted. Create a new revision instead."
            exit 1
          done
          echo "✅ No existing migrations touched."

      - name: Skip – no backend changes
        if: steps.filter.outputs.any_changed != 'true'
        run: echo "No backend-relevant files changed – skipping migration checks."

  # ------------------------------------------------------------
  # 2) MIGRATION TEST – only runs if backend_changed == true
  # ------------------------------------------------------------
  migrations:
    needs: pre-checks
    if: needs.pre-checks.outputs.backend_changed == 'true'
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install uv (Python package manager)
        run: pipx install uv

      - name: Sync project dependencies
        run: uv sync
        working-directory: ./backend

      # --- spin up the minimal Supabase stack -----------------
      - name: Show image that will be used
        run: |
          set -eu
          docker compose \
            -f docker-compose.yml \
            -f .husky/docker-compose.ci.yml \
            -f .husky/docker-compose.override.ci.yml \
            config | grep 'image:' | sed 's/^/▶ /'

      - name: Start db and stream its logs
        run: |
          set -eu
          # pull fresh layers, start detached, wait for health
          docker compose \
            -f docker-compose.yml \
            -f .husky/docker-compose.ci.yml \
            -f .husky/docker-compose.override.ci.yml \
            up -d --pull always --quiet-pull --wait --wait-timeout 180 db

          # follow the first 300 log lines from Postgres in background
          docker compose \
            -f docker-compose.yml \
            -f .husky/docker-compose.ci.yml \
            -f .husky/docker-compose.override.ci.yml \
            logs --no-color --follow --tail=300 db &

      # --- run the migration smoke test -----------------------
      - name: Run migration smoke-test
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .husky/docker-compose.ci.yml \
            -f .husky/docker-compose.override.ci.yml \
            run --build --no-deps test-migrations

      # --- helpful logs if something fails --------------------
      - name: Dump container logs on failure
        if: failure()
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .husky/docker-compose.ci.yml \
            -f .husky/docker-compose.override.ci.yml \
            logs --no-color

      # --- always clean up ------------------------------------
      - name: Tear down stack
        if: always()
        run: |
          docker compose \
            -f docker-compose.yml \
            -f .husky/docker-compose.ci.yml \
            -f .husky/docker-compose.override.ci.yml \
            down -v
