"""add daily session tracking to user profile

Revision ID: f519f3a1beda
Revises: 802e479cfac2
Create Date: 2025-07-14 00:19:58.769143

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'f519f3a1beda'
down_revision: Union[str, None] = '802e479cfac2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'conversationscenario',
        sa.Column('persona_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    )
    op.alter_column(
        'sessionfeedback',
        'status',
        existing_type=postgresql.ENUM('pending', 'completed', 'failed', name='feedbackstatusenum'),
        type_=sa.Enum('pending', 'completed', 'failed', name='feedbackstatus'),
        existing_nullable=False,
    )
    op.drop_column('sessionfeedback', 'transcript_uri')
    op.alter_column(
        'sessionturn',
        'speaker',
        existing_type=postgresql.ENUM('user', 'assistant', name='speakerenum'),
        type_=sa.Enum('user', 'assistant', name='speakertype'),
        existing_nullable=False,
    )
    op.add_column('userprofile', sa.Column('last_session_date', sa.Date(), nullable=False))
    op.drop_column('userprofile', 'sessions_created_today_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'userprofile',
        sa.Column('sessions_created_today_date', sa.DATE(), autoincrement=False, nullable=False),
    )
    op.drop_column('userprofile', 'last_session_date')
    op.alter_column(
        'sessionturn',
        'speaker',
        existing_type=sa.Enum('user', 'assistant', name='speakertype'),
        type_=postgresql.ENUM('user', 'assistant', name='speakerenum'),
        existing_nullable=False,
    )
    op.add_column(
        'sessionfeedback',
        sa.Column('transcript_uri', sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.alter_column(
        'sessionfeedback',
        'status',
        existing_type=sa.Enum('pending', 'completed', 'failed', name='feedbackstatus'),
        type_=postgresql.ENUM('pending', 'completed', 'failed', name='feedbackstatusenum'),
        existing_nullable=False,
    )
    op.drop_column('conversationscenario', 'persona_name')
    # ### end Alembic commands ###
