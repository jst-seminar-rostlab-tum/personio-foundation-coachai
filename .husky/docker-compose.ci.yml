services:
  db:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    environment:
      POSTGRES_USER:     postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB:       postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 60
    networks: [app-network]

  test-migrations:
    # … unchanged …
    build:
      context: ./backend
      dockerfile: Dockerfile
      args: { stage: dev }
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/.venv
      - ./.husky/test-migrations.sh:/test-migrations.sh
    environment:
      # ─── all tools (psql, alembic, SQLModel, etc.) resolve to the same DSN ───
      DATABASE_URL: postgresql://postgres:postgres@db:5432/postgres
      PGHOST: db
      PGPORT: "5432"
      PGUSER: postgres
      PGPASSWORD: postgres
      POSTGRES_DB: postgres
    entrypoint: ["/bin/bash", "/test-migrations.sh"]
    networks: [app-network]

networks:
  app-network:
    external: true
    name: app-network
