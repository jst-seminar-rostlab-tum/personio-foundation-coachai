set -e

# Go to root directory of the repository
cd "$(git rev-parse --show-toplevel)"

# Run frontend lint-staged
echo "🛠️- Running linting and formatting checks..."
cd ./frontend
npx lint-staged

# Run backend pre-commit linting
cd ../backend
uv run pre-commit run --config .pre-commit-config.yaml --hook-stage pre-commit

echo "✅- Linting and formatting checks passed"


if git diff --cached --name-only | grep -qE "(models\.py|models/|alembic/versions/)"; then
    echo "🗃️- Checking database migrations and models..."

    echo "🔌- Testing DB connection..."
    if ! docker compose run  -T backend uv run alembic current >/dev/null 2>&1; then
        echo "⚠️  Cannot connect to database. Attempting to start it with Docker..."

        if docker compose up -d db; then
            echo "⏳ Waiting for DB container to be healthy..."

            for i in {1..10}; do
                STATUS=$(docker inspect --format='{{.State.Health.Status}}' jspracticalcourse-db-1 2>/dev/null || echo "unknown")
                if [ "$STATUS" = "healthy" ]; then
                    echo "✅ DB container is healthy after $i second(s)"
                    break
                elif [ "$i" -eq 10 ]; then
                    echo "❌ DB container did not become healthy in time"
                    exit 1
                fi
                echo "⏳ Waiting... ($i/10)"
                sleep 1
            done
        else
            echo "❌- Failed to start the database container with Docker Compose."
            exit 1
        fi
    else
        echo "✅ alembic current succeeded"
    fi

    echo "📈- Upgrading to latest migration..."
    if ! docker compose run --rm -T backend uv run alembic upgrade head >/dev/null 2>&1; then
        echo "❌- Failed to upgrade to latest migration. One of your migration(s) has a broken upgrade() function."
        exit 1
    fi
    echo "✅ alembic upgrade succeeded"

    echo "🧪- Verifying model/schema consistency..."
    if ! docker compose run --rm -T backend uv run alembic check; then
        echo "❌- Models don't match database after running latest migrations. This means either:"
        echo "   - You changed models but didn't create a migration script. Run 'uv run alembic revision --autogenerate -m \"<message>\"' to create a new migration script."
        echo "   - Your latest migration script doesn't actually reflect your current models. Make sure the latest migration script has the correct changes in the upgrade() function."
        exit 1
    fi

    echo "✅ Checks for database migrations and models passed"
else
    echo "ℹ️- No model or migration changes detected, skipping database checks."
fi

exit 0
